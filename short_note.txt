1.แยก -folder  ตกลงกันตั้งแต่แรก
2.ใช้ branch ไม่ควรเกินสาม , tag
3. merge code อย่างไร ทำให้บ่อยสุด
4. Commit Message

http://git-scm.com/

wakatime - sublime


Git_(command)_param
$git init 
>ls-al

>brew install git
>mkdir Day1
>cd Day1
>ls -al
>git init
>git Status

>git config -l (list)

>git config —global user.name  “kittiphan.v"
>git config —global user.email “kittiphan_57@hotmail.com"


> vim test.txt สร้างไฟล์ test.txt
>git status มันจะฟ้องว่า ยังไม่แอด -git
> git add test.txt
`จากนั้น เช็คด้วย git status
> git commit -m “รายละเอียด"



> git log  ดู commit ที่เกิดขึ้น ใครเขียน ใครเมื่อไหร่


>vim test.txt แก้ไขไฟลื
>git diff จะแสดงให้ว่า อะไรเปลี่ยนแปลง



สมมุติเราพิมพ์อะไร ผิด ใช้ git Checkout — test.txt



ลองเพิ่ม add test.txt
git commit -m “`บอกการแก้ไข"
git status ดูรายละเอียดอีกที



ไฟล์ที่เราไม่ต้องการ เอาขึ้น เราก็สร้างไฟล์ .gitignore
>vim .gitignore 
ใส่ข้อมูล
aha
*.class
(esc) + shift : + wq (enter)

จะบอกว่า มีไฟล์อะไรใน .gitignore จะไม่ให้ เอาขึ้น
>git add .gitignore 
>git commit -m “Initial gitignore with aha and .class"

เข้า Github ไปที่ setting > SSH Keys > Add SSHKey ไปสร้าง key ก่อนที่เครื่อง 
ก้่อนการอัพโหลดขึ้นไป


ไปเปิด  ssh-keygen -t rsa -C “email"

เอา key ไปสร้างใน github

Github
+ Create New Respo ใน Github
 
git remote add origin git@github.com:phuektsoft/Day-1.git


git log
git log —oneline 

>git commit —amend การเพิ่มเข้าไปใน commit นั่นเลย
>git log —stat จะบอกรายละเอียดทั้งหมด 
>git push origin master อัพไป server
>

ISsue จะไปสร้าง Issue ในหน้าเว็ป 
touch fix_bug01_02
git add .
git status
git commit -m "Fixed #1 ... "
มันก็จะปิด issue ให้


Reference User @up1 (ชื่อใน Github)

>git log —oneline —decorate มีสีสัน
>git log —oneline —decorate —graph  เป็นกราฟ

>git log —stat
>git log -p
>git log —author=up1 ดูว่า ใน Respo เราว่า user นี้กี่ commit
>git log —after=“2015-9-1” สามารถดู ช่วงเวลาได้
>git log —before=‘2015-8-30'

>git log —since=2.month.ago —until=

>git log —no-merge

>git help



